# Loco configuration file documentation

# Application logging configuration
logger:
  # Enable or disable logging.
  enable: true
  # Enable pretty backtrace (sets RUST_BACKTRACE=1)
  pretty_backtrace: true
  # Log level, options: trace, debug, info, warn or error.
  level: debug
  # Define the logging format. options: compact, pretty or json
  format: compact
  # By default the logger has filtering only logs that came from your code or logs that came from `loco` framework. to see all third party libraries
  # Uncomment the line below to override to see all third party libraries you can enable this config and override the logger filters.
  override_filter: info

# Web server configuration
server:
  # Port on which the server will listen. the server binding is 0.0.0.0:{PORT}
  port: 5150
  # Binding for the server (which interface to bind to)
  binding: 0.0.0.0
  # The UI hostname or IP address that mailers will point to.
  host: http://localhost
  # Out of the box middleware configuration. to disable middleware you can changed the `enable` field to `false` of comment the middleware block
  middlewares:
    static:
      enable: true
      must_exist: true
      precompressed: false
      folder:
        uri: "/static"
        path: "assets/static"
      fallback: "assets/static/404.html"
  cors:
    enable: true
    allow_origins:
      - "http://127.0.0.1:5173"
      - "http://localhost:5173"
      - "http://localhost"
      - "http://localhost:80"
      - "https://staging.ernest.money"
      - "https://app.ernest.money"
    allow_methods:
      - "GET"
      - "POST"
      - "OPTIONS"
    allow_headers:
      - "content-type"
      - "authorization"
      - "accept"
    expose_headers:
      - "set-cookie"
    allow_credentials: true


# Worker Configuration
workers:
  # specifies the worker mode. Options:
  #   - BackgroundQueue - Workers operate asynchronously in the background, processing queued.
  #   - ForegroundBlocking - Workers operate in the foreground and block until tasks are completed.
  #   - BackgroundAsync - Workers operate asynchronously in the background, processing tasks with async capabilities.
  mode: BackgroundAsync

  

# Mailer Configuration.
mailer:
  # SMTP mailer configuration.
  smtp:
    # Enable/Disable smtp mailer.
    enable: true
    # SMTP server host. e.x localhost, smtp.gmail.com
    host: localhost
    # SMTP server port
    port: 1025
    # Use secure connection (SSL/TLS).
    secure: false
    # auth:
    #   user:
    #   password:
    # Override the SMTP hello name (default is the machine's hostname)
    # hello_name:

# Initializers Configuration
# initializers:
#  oauth2:
#    authorization_code: # Authorization code grant type
#      - client_identifier: google # Identifier for the OAuth2 provider. Replace 'google' with your provider's name if different, must be unique within the oauth2 config.
#        ... other fields

# Database Configuration
database:
  # Database connection URI
  uri: {{ get_env(name="DATABASE_URL", default="postgres://loco:loco@localhost:5432/sons-of-liberty_development") }}
  # When enabled, the sql query will be logged.
  enable_logging: false
  # Set the timeout duration when acquiring a connection.
  connect_timeout: {{ get_env(name="DB_CONNECT_TIMEOUT", default="500") }}
  # Set the idle duration before closing a connection.
  idle_timeout: {{ get_env(name="DB_IDLE_TIMEOUT", default="500") }}
  # Minimum number of connections for a pool.
  min_connections: {{ get_env(name="DB_MIN_CONNECTIONS", default="1") }}
  # Maximum number of connections for a pool.
  max_connections: {{ get_env(name="DB_MAX_CONNECTIONS", default="1") }}
  # Run migration up when application loaded
  auto_migrate: true
  # Truncate database when application loaded. This is a dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_truncate: false
  # Recreating schema when application loaded.  This is a dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_recreate: false

# Authentication Configuration
auth:
  # JWT authentication
  jwt:
    # Secret key for token generation and verification
    secret: {{ get_env(name="JWT_SECRET", default="UZLZh3Lb5R9MoRADZXF6")}}
    # Token expiration time in seconds
    expiration: 604800 # 7 days
    
settings:
  # oracle implementation (default is kormir.dlcdevkit.com)
  kormir_host: {{ get_env(name="KORMIR_HOST", default="https://kormir.dlcdevkit.com")}}
  # esplora implementation (default is localhost:30000)
  esplora_host: {{ get_env(name="ESPLORA_HOST", default="http://localhost:30000") }}
  # bitcoin network (default is regtest)
  network: {{ get_env(name="NETWORK", default="regtest")}}
  # wallet name (default is sons-of-liberty)
  name: {{ get_env(name="NAME", default="sons-of-liberty")}}
  # nostr relay (default is nostr.dlcdevkit.com)
  nostr_relay: {{ get_env(name="NOSTR_RELAY", default="wss://nostr.dlcdevkit.com")}}
  # data directory (default is ~/.sons-of-liberty)
  # data_dir: {{ get_env(name="DATA_DIR", default="home") }}
